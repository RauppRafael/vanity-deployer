/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OwnerManager,
  OwnerManagerInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/base/OwnerManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "ChangedThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovedOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "addOwnerWithThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "swapOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b8c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e67e2b1161005b578063a0e67e2b146100d2578063e318b52b146100e7578063e75235b8146100fa578063f8dc5dd91461010b57600080fd5b80630d582f13146100825780632f54bf6e14610097578063694e80c3146100bf575b600080fd5b61009561009036600461099f565b61011e565b005b6100aa6100a53660046109c9565b6102d0565b60405190151581526020015b60405180910390f35b6100956100cd3660046109eb565b61030b565b6100da6103f1565b6040516100b69190610a04565b6100956100f5366004610a51565b6104e1565b6002546040519081526020016100b6565b610095610119366004610a94565b610753565b610126610932565b6001600160a01b0382161580159061014857506001600160a01b038216600114155b801561015d57506001600160a01b0382163014155b6101965760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b60448201526064015b60405180910390fd5b6001600160a01b0382811660009081526020819052604090205416156101fe5760405162461bcd60e51b815260206004820152600560248201527f4753323034000000000000000000000000000000000000000000000000000000604482015260640161018d565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b038581168085526040852080549290931673ffffffffffffffffffffffffffffffffffffffff19928316179092556001808552835490911690911790915580549161027983610ae6565b90915550506040516001600160a01b03831681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a180600254146102cc576102cc8161030b565b5050565b60006001600160a01b03821660011480159061030557506001600160a01b038281166000908152602081905260409020541615155b92915050565b610313610932565b6001548111156103655760405162461bcd60e51b815260206004820152600560248201527f4753323031000000000000000000000000000000000000000000000000000000604482015260640161018d565b60018110156103b65760405162461bcd60e51b815260206004820152600560248201527f4753323032000000000000000000000000000000000000000000000000000000604482015260640161018d565b60028190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b6060600060015467ffffffffffffffff81111561041057610410610b00565b604051908082528060200260200182016040528015610439578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54919250906001600160a01b03165b6001600160a01b0381166001146104d9578083838151811061049a5761049a610b16565b6001600160a01b0392831660209182029290920181019190915291811660009081529182905260409091205416816104d181610ae6565b925050610476565b509092915050565b6104e9610932565b6001600160a01b0381161580159061050b57506001600160a01b038116600114155b801561052057506001600160a01b0381163014155b6105545760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015260640161018d565b6001600160a01b0381811660009081526020819052604090205416156105bc5760405162461bcd60e51b815260206004820152600560248201527f4753323034000000000000000000000000000000000000000000000000000000604482015260640161018d565b6001600160a01b038216158015906105de57506001600160a01b038216600114155b6106125760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015260640161018d565b6001600160a01b0383811660009081526020819052604090205481169083161461067e5760405162461bcd60e51b815260206004820152600560248201527f4753323035000000000000000000000000000000000000000000000000000000604482015260640161018d565b6001600160a01b038281166000818152602081815260408083208054878716808652838620805492891673ffffffffffffffffffffffffffffffffffffffff19938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a16040516001600160a01b03821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b61075b610932565b806001805461076a9190610b2c565b10156107b85760405162461bcd60e51b815260206004820152600560248201527f4753323031000000000000000000000000000000000000000000000000000000604482015260640161018d565b6001600160a01b038216158015906107da57506001600160a01b038216600114155b61080e5760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015260640161018d565b6001600160a01b0383811660009081526020819052604090205481169083161461087a5760405162461bcd60e51b815260206004820152600560248201527f4753323035000000000000000000000000000000000000000000000000000000604482015260640161018d565b6001600160a01b038281166000818152602081905260408082208054888616845291832080549290951673ffffffffffffffffffffffffffffffffffffffff1992831617909455918152825490911690915560018054916108da83610b3f565b90915550506040516001600160a01b03831681527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf9060200160405180910390a1806002541461092d5761092d8161030b565b505050565b3330146109815760405162461bcd60e51b815260206004820152600560248201527f4753303331000000000000000000000000000000000000000000000000000000604482015260640161018d565b565b80356001600160a01b038116811461099a57600080fd5b919050565b600080604083850312156109b257600080fd5b6109bb83610983565b946020939093013593505050565b6000602082840312156109db57600080fd5b6109e482610983565b9392505050565b6000602082840312156109fd57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610a455783516001600160a01b031683529284019291840191600101610a20565b50909695505050505050565b600080600060608486031215610a6657600080fd5b610a6f84610983565b9250610a7d60208501610983565b9150610a8b60408501610983565b90509250925092565b600080600060608486031215610aa957600080fd5b610ab284610983565b9250610ac060208501610983565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b60006000198203610af957610af9610ad0565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8181038181111561030557610305610ad0565b600081610b4e57610b4e610ad0565b50600019019056fea26469706673582212205cca8e4bdece6e3066b97af5b7ed31f436e8adf558dd1f7281cea2623a0f969a64736f6c63430008120033";

type OwnerManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnerManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnerManager__factory extends ContractFactory {
  constructor(...args: OwnerManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnerManager> {
    return super.deploy(overrides || {}) as Promise<OwnerManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnerManager {
    return super.attach(address) as OwnerManager;
  }
  override connect(signer: Signer): OwnerManager__factory {
    return super.connect(signer) as OwnerManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerManagerInterface {
    return new utils.Interface(_abi) as OwnerManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerManager {
    return new Contract(address, _abi, signerOrProvider) as OwnerManager;
  }
}
